name: Release
# originally from https://github.com/JohnnyMorganz/StyLua/blob/5de9a1da8a8dc628b98240e12ffe24c7fdbbea6e/src/editorconfig.rs
on:
  release:
    types: [published]

jobs:
  get_published_release:
    runs-on: ubuntu-latest

    outputs:
      release_id: ${{ steps.release_info.outputs.release_id }}
      upload_url: ${{ steps.release_info.outputs.upload_url }}
      tag_name: ${{ steps.release_info.outputs.tag_name }}
      repo_desc: ${{ steps.release_info.outputs.repo_desc }}
      repo_name: ${{ steps.release_info.outputs.repo_name }}
      repo_owner_name: ${{ steps.release_info.outputs.repo_owner_name }}

    steps:
      - name: Set Release Info
        id: release_info
        run: |
          echo "tag_name=v1.0.0" >> $GITHUB_ENV
          echo "release_id=191104411" >> $GITHUB_ENV
          echo "upload_url=https://uploads.github.com/repos/nightcycle/pseudo-enum/releases/191104411/assets{?name,label}" >> $GITHUB_ENV
          echo "repo_owner_name=nightcycle" >> $GITHUB_ENV
          echo "repo_name=pseudo-enum" >> $GITHUB_ENV

          repo_owner_name=${{ github.repository_owner }}
          echo "::set-output name=repo_owner_name::$repo_owner_name"

          repo_name=${{ github.repository }}
          forward_repo_pattern="${repo_owner_name}/"
          empty_str=""
          repo_name="${repo_name/${forward_repo_pattern}/${empty_str}}"
          echo "::set-output name=repo_name::$repo_name"

          # Use the GitHub API to fetch the repository description
          description_prefix="\"description\":"
          curl -L "https://api.github.com/repos/${repo_owner_name}/${repo_name}" > "desc.text"
          desc=$(<desc.text)
          desc=$(echo "$desc" | grep -F "$description_prefix")
          desc="${desc/${description_prefix}/${empty_str}}"
          repo_desc=$(echo "$desc" | grep -o '"[^"]*"')
          echo "::set-output name=repo_desc::$repo_desc"

  release:
    needs: ["get_published_release"]
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact-name: rojo-cloud-sync-windows-x86_64
            artifact-alias: rojo-cloud-sync-win64
            cargo-target: x86_64-pc-windows-msvc

    name: Build (${{ matrix.artifact-name }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.cargo-target }}

      - name: Build Binary
        run: cargo build --verbose --release --target ${{ matrix.cargo-target }}
        env:
          CARGO_TARGET_DIR: output

      - name: Setup Archive + Extension
        shell: bash
        run: |
          mkdir -p staging

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp "output/${{ matrix.cargo-target }}/release/pseudo-enum.exe" staging/
            cd staging
            7z a ../release.zip *
          else
            cp "output/${{ matrix.cargo-target }}/release/pseudo-enum" staging/
            cd staging
            zip ../release.zip *
          fi

      - name: Upload Binary Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}
          path: release.zip

      - name: Upload Binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ needs.get_published_release.outputs.upload_url }}
          asset_path: release.zip
          asset_name: ${{ matrix.artifact-name }}.zip
          asset_content_type: application/zip

      # TODO: Remove this after deprecation notice
      - name: Upload Binary to Release aliases
        if: ${{ matrix.artifact-alias != '' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ needs.get_published_release.outputs.upload_url }}
          asset_path: release.zip
          asset_name: ${{ matrix.artifact-alias }}.zip
          asset_content_type: application/zip